package leetcode.dfs.sudokusolver;

public class TestSudoku {
	public static void main(String[] args){
		SudokuSolver ss = new SudokuSolver();
//		char[][] B ={
//				{'5', '3', '1', '2', '7', '6', '4', '9', '8'} ,
//				{'6', '2', '3', '1', '9', '5', '8', '4', '7'} ,
//				{'1', '9', '8', '3', '4', '7', '5', '6', '2' },
//				{'8', '1', '2', '7', '6', '4', '9', '5', '3' },
//				{'4', '7', '9', '8', '5', '3', '6', '2', '1' },
//				{'7', '4', '5', '9', '2', '8', '3', '1', '6'},
//				{'9', '6', '7', '5', '3', '1', '2', '8', '4' },
//				{'2', '8', '6', '4', '1', '9', '7', '3', '5' },
//				{'3', '5', '4', '6', '8', '2', '1', '7', '9'},
//
//					};
		char[][] B = { 
				{ '5', '3', '.', '.', '7', '.', '.', '.', '.' },
								{ '6', '.', '.', '1', '9', '5', '.', '.', '.' },
								{ '.', '9', '8', '.', '.', '.', '.', '6', '.' },
								{ '8', '.', '.', '.', '6', '.', '.', '.', '3' },
								{ '4', '.', '.', '8', '.', '3', '.', '.', '1' },
								{ '7', '.', '.', '.', '2', '.', '.', '.', '6' },
								{ '.', '6', '.', '.', '.', '.', '2', '8', '.' },
								{ '.', '.', '.', '4', '1', '9', '.', '.', '5' },
								{ '.', '.', '.', '.', '8', '.', '.', '7', '9' } 
				};

		
		for(int i=0; i<9; i++){
			for(int j=0; j<9; j++)
				System.out.print(B[i][j]+" ");
			System.out.println();
		}	
		System.out.println();
		ss.solveSudoku(B);
		for(int i=0; i<9; i++){
			for(int j=0; j<9; j++)
				System.out.print(B[i][j]+" ");
			System.out.println();
		}	
		
		
//		boolean r1 = ss.isValidBox(B, 3, 7, '0');
//		System.out.println(r1);
	}
}
